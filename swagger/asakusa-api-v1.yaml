openapi: 3.0.3
info:
  title: Asakusa API
  version: "1.0.0"
  contact:
    name: Daniel Ziaoure
    email: daniel@akwabasystems.com
  license:
    url: https://mit-license.org/
    name: MIT License
    
tags:
  - name: Users
    description: User accounts and users' items
  - name: Teams
    description: Project teams
  - name: Projects
    description: Projects
  - name: Tasks
    description: Project tasks
  - name: Elements
    description: Project elements
  - name: Miscellaneous
    description: Miscellaneous items
    
servers:
  - url: http://localhost:8085

paths: 
  /users:
    post:
      tags:
        - Users
      summary: Create a user account
      responses: 
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
              
  /users/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      tags:
        - Users
      summary: Retrieve a user's info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
                
    put:
      tags:
        - Users
      summary: Update a user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
                  
    delete:
      tags:
        - Users
      summary: Delete a user
      responses:
        '204':
          description: No Content

  /teams:
    post:
      tags:
        - Teams
      summary: Create a team
      responses: 
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
                
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
              
    get:
      tags:
        - Teams
      summary: Retrieve all teams
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'

  /teams/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        
    put:
      tags:
        - Teams
      summary: Update a team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'

    delete:
      tags:
        - Teams
      summary: Delete a team
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
                
  /teams/{id}/members:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        
    post:
      tags:
        - Teams
      summary: Add a user to a team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
                
    get:
      tags:
        - Teams
      summary: Retrieve all members of a team
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
                
  /teams/{id}/members/{mid}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: mid
        in: path
        required: true
        
    delete:
      tags:
        - Teams
      summary: Remove a user from a team
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        
  /teams/{id}/projects:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true

    post:
      tags:
        - Projects
      summary: Create a project
      responses: 
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
                
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
              
    get:
      tags:
        - Projects
      summary: Retrieve all projects for a team
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
                            
    
  /teams/{id}/projects/{pid}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: pid
        in: path
        required: true
        
    put:
      tags:
        - Projects
      summary: Update a project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'

    delete:
      tags:
        - Projects
      summary: Delete a project
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        
                
  /projects/{id}/media:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        
    post:
      tags:
        - Elements
      summary: Add a medium to a project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Media'
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
                
    get:
      tags:
        - Elements
      summary: Retrieve the media for a project
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
                
  /projects/{id}/media/{mid}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: mid
        in: path
        required: true
        
    delete:
      tags:
        - Elements
      summary: Remove a medium from a project
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
                
  /projects/{id}/discussions:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        
    post:
      tags:
        - Elements
      summary: Start a new discussion on a project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discussion'
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
                
    get:
      tags:
        - Elements
      summary: Retrieve the discussion thread for a project
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Discussion'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
                
  /projects/{id}/discussions/{did}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: did
        in: path
        required: true
        
    delete:
      tags:
        - Elements
      summary: Delete a discussion
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        
  /projects/{id}/discussions/{did}/messages:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: did
        in: path
        required: true
        
    post:
      tags:
        - Elements
      summary: Post a message on a discussion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
                
    get:
      tags:
        - Elements
      summary: Retrieve the messages for a discussion
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
                
  /projects/{id}/discussions/{did}/messages/{mid}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: did
        in: path
        required: true
      - schema:
          type: string
        name: mid
        in: path
        required: true
        
    delete:
      tags:
        - Elements
      summary: Delete a discussion message
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'

  /projects/{id}/tasks:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true

    post:
      tags:
        - Tasks
      summary: Create a task
      responses: 
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
                
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        
    get:
      tags:
        - Tasks
      summary: Retrieve the tasks for a project
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'

  /projects/{id}/tasks/{tid}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: tid
        in: path
        required: true
        
    put:
      tags:
        - Tasks
      summary: Update a task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'

    delete:
      tags:
        - Tasks
      summary: Delete a task
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
              
  /projects/{id}/tasks/{tid}/media:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: tid
        in: path
        required: true
        
    post:
      tags:
        - Tasks
      summary: Add a medium to a task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Media'
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
                
    get:
      tags:
        - Tasks
      summary: Retrieve the media for a task
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
              
  
  /projects/{id}/tasks/{tid}/media/{mid}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: tid
        in: path
        required: true
      - schema:
          type: string
        name: mid
        in: path
        required: true
        
    delete:
      tags:
        - Tasks
      summary: Remove a medium from a task
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /tags:

    get:
      tags:
        - Miscellaneous
      summary: Retrieve all the tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
                
components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
          minLength: 6
        password:
          type: string
          format: password
          writeOnly: true
          minLength: 8
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        picture:
          type: string
        roles:
          type: array
          items:
            type: string
            enum:
              - User
              - Admin
      required:
        - email
        - first_name
        - last_name

    Team:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        description:
          type: string
        created_by:
          type: string
        created_date:
          type: string
          format: date-time
      required:
        - name
        
    Project:
      type: object
      properties:
        id: 
          type: string
          readOnly: true
        name:
          type: string
        description:
          type: string
        team_id:
          type: string
        owner_id:
          type: string
        start_date:
          type: string
          format: date-time
        deadline:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        capacity:
          type: integer
        status:
          type: string
          default: todo
          enum:
            - todo
            - in_progress
            - paused
            - blocked
            - in_testing
            - done
        priority:
          type: string
          default: medium
          enum:
            - low
            - medium
            - high
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - name
        - team_id
            
    Task:
      type: object
      properties:
        id: 
          type: string
          readOnly: true
          pattern: '^[0-9a-fA-F\-]{36}$'
          example: f7f680a8-d111-421f-b6b3-493ebf905078
        title:
          type: string
        description:
          type: string
        project_id:
          type: string
        assignee_id:
          type: string
        depends_on:
          type: string
        start_date:
          type: string
          format: date-time
        estimated_duration:
          type: integer
          minimum: 1
        end_date:
          type: string
          format: date-time
        status:
          type: string
          default: todo
          enum:
            - todo
            - in_progress
            - blocked
            - completed
        priority:
          type: string
          default: medium
          enum:
            - low
            - medium
            - high
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - title
        - project_id
          
    Discussion:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          pattern: '^[0-9a-fA-F\-]{36}$'
          example: f7f680a8-d111-421f-b6b3-493ebf905078
        author_id:
          type: string
        title:
          type: string
        start_date:
          type: string
          format: date-time
      required:
        - author_id
        - title
        
    Message:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          pattern: '^[0-9a-fA-F\-]{36}$'
          example: f7f680a8-d111-421f-b6b3-493ebf905078
        author_id:
          type: string
        body:
          type: string
        created_date:
          type: string
          format: date-time
      required:
        - sender_id
        - body
          
    Media:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          pattern: '^[0-9a-fA-F\-]{36}$'
          example: f7f680a8-d111-421f-b6b3-493ebf905078
        title:
          type: string
        thumbnail:
          type: string
        url:
          type: string
        type:
          type: string
          default: image
          enum:
            - image
            - document
            - audio
            - video
            - other
      required:
        - url
          
    Tag:
      type: object
      properties:
        name:
          type: string
        color_code:
          type: string

    Problem:
      type: object
      properties:
        type:
          type: string
          description: URI indicating error type
        title:
          type: string
          description: Human-readable error title
        status:
          type: integer
          description: HTTP status code
        detail:
          type: string
          description: Human-readable error details
        instance:
          type: string
          description: URI indicating error instance
  
  